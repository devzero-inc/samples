# version: '3.8'
# services:
#   app:
#     container_name: nextjs-app
#     build: .
#     # network_mode: "host"
#     ports:
#       - '6000:3000'
#     volumes:
#       - /var/run/docker.sock:/var/run/docker.sock

version: '3.8'
services:
  app:
    build: .
    container_name: nextjs-dind-app
    privileged: true
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - /var/lib/docker
      # - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '3000:3000'
    # If your application or scripts inside the container depend on the Docker daemon being fully started,
    # you might need to implement a wait mechanism or adjust your entrypoint script accordingly.


# version: '3.8'
# services:
#   dind:
#     image: docker:dind
#     container_name: docker-dind
#     privileged: true
#     environment:
#       - DOCKER_TLS_CERTDIR=/certs
#     volumes:
#       # - /var/run/docker.sock:/var/run/docker.sock
#       - dind-certs:/certs/client
#       - dind-data:/var/lib/docker
#     ports:
#       - "2375:2375"

#   app:
#     container_name: nextjs-app
#     build: .
#     ports:
#       - '3000:3000'
#     depends_on:
#       - dind
#     environment:
#       - DOCKER_HOST=tcp://docker-dind:2375
#     volumes:
#       - .:/app # Adjust this to your application's needs

# volumes:
#   dind-certs:
#   dind-data:

